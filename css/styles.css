/* 
-------------------------------------------------------------------------------
  Global styles 
-------------------------------------------------------------------------------
*/

:root {
  --orange: #f87070;
  --green: #70f3f8;
  --purple: #d881f8;
  --light-blue: #d7e0ff;
  --dark-blue: #1e213f;
  --darker-blue: #161932;
  --white: #ffffff;
  --beige: #eff1fa;
}

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  font-family: "Kumbh Sans", sans-serif;
  color: var(--light-blue);
}

/* 
-------------------------------------------------------------------------------
  HTML elements 
-------------------------------------------------------------------------------
*/

body {
  background-color: var(--dark-blue);
}

h2 {
  font-size: 28px;
  line-height: 34px;
  margin-top: 50px;
  margin-bottom: 50px;
}

h3 {
  font-size: 16px;
  line-height: 18px;
  letter-spacing: 15px;
  text-transform: uppercase;
}

h4 {
  font-weight: bold;
  font-size: 13px;
  text-transform: uppercase;
  letter-spacing: 5px;
}

nav {
  border-radius: 50px;
  padding-left: 10px;
  width: 373px;
  height: 63px;
  z-index: 10;
  background-color: var(--darker-blue);
}

nav > ul {
  position: relative;
  display: flex;
  list-style-type: none;
  justify-content: space-around;
  align-items: center;
  height: 100%;
}

nav > ul > li {
  opacity: 0.4;
  transition: opacity 10ms ease-out;
}

form {
  pointer-events: auto;
  margin: auto;
  border-radius: 25px;
  width: 550px;
  height: 464px;
  background-color: var(--white);
}

hr {
  opacity: 0.4;
}

/* 
-------------------------------------------------------------------------------
Structural ids 
-------------------------------------------------------------------------------
*/

#wrapper {
  display: flex;
  flex-direction: column;
  width: 100%;
}

#bgindicator {
  border-radius: 50px;
  height: 48px;
  width: calc(95% / 3);
  margin-top: -55px;
  background-color: var(--orange);
  transition: margin-left 300ms ease-out;
}

/* Timer */
#outercircle {
  position: relative;
  margin-top: 45px;
  display: flex;
  height: 410px;
  width: 410px;
  border-radius: 50%;
  background: linear-gradient(315deg, #2e325a 0%, #0e112a 100%);
  box-shadow: -50px -50px 100px #272c5a, 50px 50px 100px #121530;
}

#innercircle {
  display: flex;
  margin: auto;
  height: 366px;
  width: 366px;
  border-radius: 50%;
  background-color: var(--darker-blue);
}

#ring {
  margin: auto;
  width: 339px;
  height: 339px;
}

#ring > circle {
  fill: transparent;
  stroke: var(--orange);
  stroke-width: 10;
  stroke-dasharray: 1024, 1024;
  stroke-dashoffset: 0;
  stroke-linecap: round;
  transform: rotate(-90deg);
  transform-origin: 50% 50%;
  transition: stroke-dashoffset 200ms ease-out;
}

#textcontainer {
  position: absolute;
  height: 410px;
  width: 410px;
}

#time {
  font-size: 100px;
  width: 100%;
  text-align: center;
  margin-top: 160px;
}

#action {
  margin-top: 20px;
  width: 100%;
  text-align: center;
}

/* Settings */
#settings {
  margin-top: 100px;
}

#settingscontainer {
  display: none;
  z-index: 100;
  position: absolute;
  width: 100%;
  height: 100vh;
  transition: display ease-in 500ms;
}

/*
DESIGN NOTE: 
Form outer - sized to the window (because I have an overlay layer that has
to sit ontop of the timer, I need another container that sits on top
of THAT for the form.  The 'outer' is a div the size of the window.
The 'inner' is the size of the actual settings form.
*/

#formouter {
  pointer-events: none;
  position: absolute;
  z-index: 200;
  display: flex;
  width: 100%;
  height: 100vh;
}

#settingsheader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 34px 40px;
}

#settingsheader > h2 {
  margin: 0;
  color: var(--darker-blue);
}

#settingstime {
  margin: 0 20px 0 40px;
}

#settingstime > h4 {
  display: flex;
  padding: 25px 0px;
  color: var(--darker-blue);
}

#settingsoverlay {
  pointer-events: auto;
  position: absolute;
  top: 0;
  width: 100%;
  height: 100vh;
  background: rgba(10, 12, 28, 0.5);
  z-index: 100;
}

.inputs {
  display: flex;
}

.input {
  display: inline-flex;
  flex-direction: column;
  width: 140px;
  margin-right: 20px;
}

.input > label {
  color: var(--darker-blue);
  padding-bottom: 10px;
  opacity: 40%;
}

.input input {
  height: 48px;
  width: 80px;
  background-color: var(--beige);
  border: none;
  outline: none;
  appearance: text;
  color: var(--darker-blue);
}

/* 
  This is where we start working through the number inputs
  for the settings modal.  Lots of custom elements here!  Be warned!
*/

/* Hide the up and down arrows. */
.input input::-webkit-inner-spin-button,
.input input::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.inputnumber {
  display: flex;
  background-color: var(--beige);
  justify-content: space-between;
  padding-left: 15px;
  padding-right: 15px;
  border-radius: 10px;
}

/* 
  Instead we're using input buttons to represent the up and
  down arrows.  They have to be in their own container and lined
  up next to the number input.
*/

.inputbuttons {
  display: flex;
  flex-direction: column;
  background-color: var(--beige);
}

.inputbuttons button {
  flex-grow: 1;
  background-color: var(--beige);
  border: none;
  outline: none;
}

/* utility classes */
.center {
  margin-left: auto;
  margin-right: auto;
}

.body1 {
  font-weight: bold;
  font-size: 14px;
  line-height: 18px;
}

.body2 {
  font-weight: bold;
  font-size: 12px;
  line-height: 14px;
}

.active {
  color: var(--darker-blue);
  opacity: 1;
}

.pointer {
  user-select: none;
  cursor: pointer;
}
